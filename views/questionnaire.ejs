<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.tailwindcss.com"></script>
    <title>Inner Compass</title>
    <style>
      #questionnaire {
  scroll-snap-type: y mandatory;
  overflow-y: auto;
  max-height: 500px; /* You can adjust this as needed */
}

.question-container {
  scroll-snap-align: start;
  padding-bottom: 1rem; /* Optional: Add space between questions */
}

    </style>
  </head>
  <body class="bg-gray-100">
    <nav class="bg-white shadow">
      <div class="container mx-auto flex justify-between items-center p-4">
        <h3 class="text-2xl font-semibold">Inner Compass</h3>
        <div class="relative">
          <img
            class="user-pic w-10 h-10 rounded-full cursor-pointer"
            src="../images/Make Up.jpg"
            alt="User Pic"
            onclick="toggleMenu()"
          />
          <div
            class="sub-menu-wrap absolute right-0 mt-2 w-48 bg-white shadow-lg rounded-lg hidden"
            id="subMenu"
          >
            <div class="sub-menu p-2">
              <div class="user-info flex items-center">
                <img class="w-8 h-8 rounded-full" src="../images/Make Up.jpg" />
                <!-- <h3 class="ml-2 font-semibold">JAGRUT</h3> -->
              </div>
              <hr class="my-2" />
              <!-- <a
                href="/profile"
                class="sub-menu-link flex items-center p-2 hover:bg-gray-200 rounded"
              >
                <img
                  class="w-5 h-5"
                  src="../images/drop-down/profile.png"
                  alt="Profile"
                />
                <p class="ml-2">Edit Profile</p>
              </a> -->
              <!-- <a
                href="/setting"
                class="sub-menu-link flex items-center p-2 hover:bg-gray-200 rounded"
              >
                <img
                  class="w-5 h-5"
                  src="../images/drop-down/setting.png"
                  alt="Settings"
                />
                <p class="ml-2">Settings</p>
              </a> -->
              <a
                href="/contact-us"
                class="sub-menu-link flex items-center p-2 hover:bg-gray-200 rounded"
              >
                <img
                  class="w-5 h-5"
                  src="../images/drop-down/help.png"
                  alt="Help"
                />
                <p class="ml-2">Needed Any Help?</p>
              </a>
              <a
                href="/logout"
                class="sub-menu-link flex items-center p-2 hover:bg-gray-200 rounded"
              >
                <img
                  class="w-5 h-5"
                  src="../images/drop-down/logout.png"
                  alt="Logout"
                />
                <p class="ml-2">Log Out</p>
              </a>
            </div>
          </div>
        </div>
      </div>
    </nav>

    <div class="container mx-auto mt-8 p-6 flex items-center flex-col">
      <h2 class="text-3xl font-bold mb-6 text-center">
        Mental Health Questionnaire
      </h2>
      <div id="questionnaire" class="w-[60%] rounded-xl overflow-y-auto ">
        <!-- Dynamically loaded questions -->
      </div>
      <div class="flex justify-center mt-8">
        <button
          id="submit"
          class="bg-blue-600 text-white px-6 py-3 rounded-lg text-lg hover:bg-blue-700 transition ease-in-out duration-150"
        >
          Submit
        </button>
      </div>
    </div>

    <script>

function addScrollListener() {
  const radioButtons = document.querySelectorAll('input[type="radio"]');
  radioButtons.forEach((radio) => {
    radio.addEventListener("change", (event) => {
      const questionContainer = event.target.closest(".question-container");
      const nextQuestion = questionContainer.nextElementSibling;

      if (nextQuestion) {
        nextQuestion.scrollIntoView({ behavior: "smooth", block: "start" });
      }
    });
  });
}



      let subMenu = document.getElementById("subMenu");

      function toggleMenu() {
        subMenu.classList.toggle("hidden");
      }

      // Function to fetch questions from the API
      async function fetchQuestions() {
  try {
    const response = await fetch("/api/questions");
    if (!response.ok) {
      throw new Error("Network response was not ok");
    }
    const questions = await response.json();
    console.log(questions); // Log response to check
    displayQuestions(questions);
    addScrollListener(); // Add this line to attach listeners
  } catch (error) {
    console.error("There was a problem with the fetch operation:", error);
  }
}



      function displayQuestions(questions) {
  const questionnaireContainer = document.getElementById("questionnaire");
  questions.forEach((question) => {
    const questionDiv = document.createElement("div");
    questionDiv.classList.add(
      "bg-white",
      "rounded",
      "p-6",
      "border-y-[1px]",
      "question-container" 
    );

    questionDiv.innerHTML = `
      <p class="text-xl text-center font-semibold mb-4">${question.question}</p>
      <div class="flex justify-between items-center w-full max-w-md mx-auto my-8 relative">
        ${question.options
          .map(
            (option, index) => `
            <div class="text-center">
              <label class="flex items-center cursor-pointer">
                <input 
                  type="radio" 
                  name="${question._id}" 
                  value="${option}" 
                  class="transition-all duration-200 rounded-full flex items-center justify-center 
                    ${index === 0 || index === 4 ? "w-10 h-10" : "w-8 h-8"} 
                    ${index === 0 || index === 4 ? (index === 0 ? "border-purple-500" : "border-blue-500") : index < 2 ? "border-purple-500" : "border-blue-500"}">
                <span 
                  class="rounded-full transform scale-0 transition-transform duration-200 ease-in-out
                    ${index === 0 || index === 4 ? (index === 0 ? "bg-purple-500" : "bg-blue-500") : index < 2 ? "bg-purple-500" : "bg-blue-500"}
                    ${index === 0 || index === 4 ? "w-6 h-6" : "w-4 h-4"}">
                </span>
              </label>
            </div>
          `
          )
          .join("")}
        <span class="absolute -left-2 text-xs text-purple-500 font-bold -bottom-6">DISAGREE</span>
        <span class="absolute right-6 text-xs text-blue-500 font-bold -bottom-6">AGREE</span>
      </div>
    `;

    questionnaireContainer.appendChild(questionDiv);
  });
}

document.getElementById("submit").addEventListener("click", async () => {
  const selectedAnswers = {};
  const questionContainers = document.querySelectorAll(".question-container");

  let allAnswered = true;

  // Loop through each question and check if an answer is selected
  questionContainers.forEach((questionElement) => {
    const questionId = questionElement.querySelector('input[type="radio"]').name;
    const selectedOption = questionElement.querySelector('input[type="radio"]:checked');

    if (selectedOption) {
      selectedAnswers[questionId] = parseInt(selectedOption.value);
    } else {
      allAnswered = false;
    }
  });

  if (!allAnswered) {
    alert("Please answer all the questions before submitting.");
    return;
  }

  try {
    const response = await fetch("/api/submit-quiz", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ answers: selectedAnswers }),
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error("Backend error:", response.status, errorText);
      throw new Error(`Backend error: ${response.status} - ${errorText}`);
    }

    const result = await response.json();

    if (result.redirectUrl) {
      window.location.href = result.redirectUrl;
    }
  } catch (error) {
    console.error("Error submitting quiz:", error);
  }
});


      // Call the function to fetch questions when the page loads
      fetchQuestions();
    </script>
  </body>
</html>
